events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    upstream influxdb {
        server influxdb:8086;
    }

    upstream influxdb_exporter {
        server influxdb_exporter:9122;
    }


    server {
        listen       6080;
        server_name  localhost;

        location /test1{
            rewrite ^/test1(.*)$ $1 break;
            proxy_pass http://influxdb;
        }

        location /test2{
            rewrite ^/test2(.*)$ $1 break; 
            proxy_pass http://influxdb_exporter;
        }


        location / {  
            content_by_lua '  
                local online, test, action
                action = ngx.var.request_method

                if action == "POST" then
                    ngx.req.read_body()
                        local data = ngx.req.get_body_data()
                        arry = {method = ngx.HTTP_POST, body = data}
                else
                    arry = {method = ngx.HTTP_GET}
                end

                online, test = ngx.location.capture_multi {
                    { "/test1" .. ngx.var.request_uri, arry},
                    { "/test2" .. ngx.var.request_uri, arry},
                }

                ngx.status = online.status
                ngx.say(online.body)
                    ';  
        }  
    }
}

